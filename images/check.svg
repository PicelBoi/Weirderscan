<?xml version="1.0" encoding="utf-8"?>
<svg viewBox="0 0 100 100" width="100" height="100" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient gradientUnits="userSpaceOnUse" x1="239.618" y1="140.593" x2="239.618" y2="170.654" id="gradient-0" spreadMethod="pad" gradientTransform="matrix(2.087918, 1.861155, -1.68698, 1.892509, -188.839584, -698.654768)">
      <stop offset="0" style="stop-color: rgb(249, 250, 255);"/>
      <stop offset="0.401" style="stop-color: rgb(155, 165, 179);"/>
      <stop offset="1" style="stop-color: rgb(55, 73, 98);"/>
    </linearGradient>
  </defs>
  <path style="stroke: rgba(0, 0, 0, 0); fill: url(#gradient-0);" d="M 21.806 84.088 C 28.868 73.09 53.954 37.084 99.999 16.654 C 100.143 16.59 68.496 -0.028 68.466 0 C 56.628 10.612 25.532 54.87 25.4 54.662 C 13.586 36.2 -0.042 24.262 0 24.32 C 9.56 37.712 16.846 53.768 21.77 84.082"/>
  <path style="stroke: rgba(254, 0, 0, 0); fill: rgb(223, 69, 65);" d="M 13.418 35.32 C 19.484 42.142 20.868 44.24 25.694 51.546 C 29.228 46.526 33.66 40.264 37.542 35.45 C 37.552 35.478 29.134 35.282 13.418 35.32 Z"/>
  <path style="stroke: rgba(254, 0, 0, 0); fill: rgb(223, 69, 65);" d="M 20.844 69.602 C 25.512 71.764 41.936 80.342 63.764 84.912 C 62.338 80.882 53.98 57.672 53.978 57.688 C 54.048 57.632 20.956 69.532 20.844 69.602 Z" transform="matrix(-0.33889, 0.940826, -0.940826, -0.33889, 123.721199, 55.662018)"/>
<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function() {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					head.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					head.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function(msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			console.log('Live reload enabled.');
		})();
	}
	// ]]>
</script>
</svg>
